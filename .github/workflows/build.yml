name: Validate Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build tools and test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine pytest pytest-cov

      - name: Build the package
        run: python -m build

      - name: Install package (editable)
        run: pip install -e .

      - name: Check the distribution
        run: twine check dist/*

      - name: Run tests with coverage
        run: |
          pytest --strict-markers --cov=roman_imsim --cov-report=xml --cov-fail-under=85 tests/

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
      - name: Check for known vulnerabilities
        run: |
          pip install pip-audit
          pip-audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install linters
        run: |
          pip install flake8 black mypy
          black --check roman_imsim tests
          flake8 roman_imsim tests
          mypy roman_imsim